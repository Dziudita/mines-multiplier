"use client";
import React, { useState } from "react";

// Teisinga 24x24 multiplier lentelė
const multipliers: (number | null)[][] = [
  [1.01, 1.08, 1.12, 1.18, 1.24, 1.31, 1.37, 1.44, 1.52, 1.6, 1.65, 1.7, 1.9, 2.06, 2.25, 2.47, 2.73, 3.04, 3.41, 3.86, 4.39, 5.02, 5.77, 6.65],
  [1.08, 1.19, 1.48, 1.56, 1.64, 1.82, 2.0, 2.2, 2.42, 2.67, 2.83, 3.0, 3.26, 3.57, 3.91, 4.31, 4.75, 5.25, 5.83, 6.5, 7.28, 8.18, 9.23, 10.42],
  [1.16, 1.34, 1.71, 1.85, 1.98, 2.38, 2.64, 2.91, 3.21, 3.53, 3.88, 4.26, 4.67, 5.13, 5.63, 6.19, 6.81, 7.5, 8.27, 9.13, 10.1, 11.19, 12.41, 13.78],
  [1.24, 1.5, 1.95, 2.15, 2.34, 2.84, 3.24, 3.66, 4.13, 4.62, 5.16, 5.75, 6.4, 7.13, 7.93, 8.84, 9.86, 11.01, 12.31, 13.77, 15.42, 17.29, 19.41, 21.82],
  [1.31, 1.64, 2.17, 2.45, 2.73, 3.5, 4.05, 4.66, 5.33, 6.07, 6.9, 7.84, 8.9, 10.1, 11.46, 13.0, 14.75, 16.73, 19.0, 21.6, 24.57, 27.97, 31.86, 36.3],
  [1.39, 1.81, 2.42, 2.78, 3.13, 4.25, 5.06, 6.0, 7.1, 8.38, 9.88, 11.63, 13.67, 16.04, 18.79, 22.0, 25.75, 30.13, 35.25, 41.24, 48.25, 56.47, 66.0, 77.0],
  [1.47, 2.0, 2.72, 3.18, 3.65, 5.12, 6.34, 7.81, 9.57, 11.68, 14.2, 17.21, 20.8, 25.1, 30.23, 36.36, 43.69, 52.38, 62.73, 75.0, 89.58, 106.87, 127.4, 151.61],
  [1.55, 2.2, 3.04, 3.62, 4.21, 6.11, 7.9, 10.2, 13.14, 16.85, 21.51, 27.3, 34.47, 43.26, 54.0, 67.0, 82.71, 101.62, 124.3, 151.43, 183.83, 222.47, 268.52, 323.37],
  [1.63, 2.42, 3.39, 4.1, 4.84, 7.23, 9.72, 13.16, 17.83, 24.13, 32.45, 43.41, 57.69, 75.99, 99.39, 128.91, 165.75, 211.47, 267.94, 337.52, 423.22, 528.0, 655.32, 809.48],
  [1.71, 2.65, 3.77, 4.62, 5.52, 8.49, 11.86, 16.61, 23.09, 31.86, 43.6, 59.7, 80.74, 107.37, 141.13, 182.89, 234.77, 299.34, 379.71, 479.67, 603.72, 757.28, 946.74, 1179.63],
  [1.79, 2.9, 4.18, 5.2, 6.3, 10.0, 14.43, 21.02, 30.65, 44.2, 62.8, 87.18, 118.79, 159.67, 211.12, 276.76, 359.93, 464.86, 596.81, 762.43, 970.06, 1229.09, 1550.41, 1947.16],
  [1.88, 3.17, 4.62, 5.83, 7.21, 11.74, 17.47, 26.77, 41.63, 64.83, 99.39, 148.51, 214.55, 302.02, 415.18, 561.36, 748.18, 987.73, 1294.6, 1687.37, 2190.82, 2837.87, 3662.61, 4712.57],
  [1.96, 3.45, 5.1, 6.5, 8.28, 13.8, 21.15, 34.03, 56.86, 97.73, 158.75, 244.18, 360.22, 515.69, 722.15, 994.61, 1352.46, 1820.47, 2429.34, 3220.62, 4249.93, 5589.07, 7334.92, 9618.5],
  [2.04, 3.75, 5.63, 7.24, 9.57, 16.13, 25.67, 43.01, 75.0, 134.64, 236.02, 393.26, 629.22, 973.15, 1468.32, 2157.88, 3126.1, 4471.91, 6316.12, 8825.18, 12292.58, 17137.42, 23894.61, 33295.48],
  [2.12, 4.07, 6.2, 8.07, 11.04, 18.83, 31.14, 54.45, 100.77, 190.61, 352.47, 638.92, 1123.24, 1946.32, 3326.07, 5604.2, 9322.1, 15166.5, 24309.8, 38525.1, 60666.5, 95032.4, 147869.4, 229847.7],
  [2.2, 4.41, 6.81, 9.0, 12.83, 22.04, 37.98, 69.63, 134.88, 264.82, 519.43, 990.31, 1856.66, 3449.86, 6291.17, 11369.9, 20225.0, 35439.6, 61534.2, 106226.2, 182573.9, 311018.3, 527916.2, 893126.5],
  [2.29, 4.76, 7.46, 10.03, 14.88, 25.79, 46.17, 88.16, 175.29, 346.88, 678.62, 1329.92, 2561.44, 4885.98, 9284.6, 17496.6, 32693.6, 60147.4, 110207.6, 200925.7, 365065.6, 658186.7, 1187907.3, 2145535.2],
  [2.38, 5.13, 8.15, 11.19, 17.25, 30.2, 56.67, 109.75, 213.83, 416.25, 809.99, 1575.1, 3056.6, 5884.4, 11337.2, 21776.9, 41745.9, 79755.3, 151984.1, 289300.0, 551847.7, 1051690.8, 2002254.5, 3810953.5],
  [2.47, 5.51, 8.88, 12.5, 19.99, 35.45, 67.61, 130.96, 254.03, 495.59, 968.21, 1893.0, 3702.6, 7252.1, 14192.5, 27802.1, 54489.1, 106734.9, 209254.3, 410488.0, 805107.2, 1580193.1, 3102034.7, 6102607.1],
  [2.56, 5.91, 9.65, 14.0, 23.17, 40.94, 78.04, 149.17, 285.15, 546.41, 1047.3, 2007.5, 3866.9, 7459.7, 14408.1, 27843.1, 53775.2, 103856.6, 201004.3, 389071.4, 753989.4, 1461918.6, 2834722.3, 5507473.8],
  [2.65, 6.33, 10.46, 15.62, 26.86, 46.95, 89.54, 170.57, 325.01, 620.34, 1184.7, 2263.6, 4323.2, 8261.9, 15776.4, 30157.8, 57649.4, 110246.2, 211187.9, 404834.1, 777570.9, 1493011.2, 2867457.3, 5508940.5],
  [2.74, 6.76, 11.31, 17.4, 31.0, 53.99, 102.95, 196.41, 374.58, 714.54, 1363.2, 2600.1, 4961.3, 9454.9, 18011.9, 34253.6, 65204.7, 124082.1, 236027.5, 448262.2, 851404.5, 1613432.9, 3058026.6, 5798890.6],
  [2.83, 7.21, 12.19, 19.4, 35.7, 61.94, 118.79, 227.21, 434.66, 831.54, 1590.2, 3038.2, 5806.9, 11096.3, 21172.6, 40371.4, 76985.1, 146927.5, 280276.4, 534692.2, 1021035.1, 1950994.5, 3722720.5, 7092780.6],
  [2.92, 7.67, 13.11, 21.6, 41.0, 71.84, 137.96, 267.01, 517.65, 1005.25, 1944.6, 3767.3, 7267.2, 14015.5, 27033.8, 52044.1, 100265.5, 193189.2, 372125.9, 715891.6, 1377336.5, 2650006.5, 5105192.4, 9835485.4],
  [3.01, 8.15, 14.06, 24.1, 47.2, 83.0, 159.78, 309.96, 607.99, 1193.6, 2343.3, 4596.5, 9025.8, 17727.6, 34819.5, 68410.8, 134414.3, 263925.5, 518727.3, 1019947.1, 2009517.9, 3962601.2, 7812433.1, 15399539.6],
];

// Multiplier getter
export function getMultiplier(diamonds: number, mines: number): number | null {
  if (
    diamonds < 1 || diamonds > 24 ||
    mines < 1 || mines > 24
  ) return null;
  return multipliers[diamonds - 1][mines - 1];
}

// Tikimybės formulė: C(safe, picks) / C(total, picks) * 100
export function getWinChance(picks: number, mines: number): number {
  const total = 25;
  const safe = total - mines;
  function comb(n: number, r: number): number {
    if (r > n) return 0;
    let res = 1;
    for (let i = 1; i <= r; i++) {
      res *= (n - i + 1) / i;
    }
    return res;
  }
  return (comb(safe, picks) / comb(total, picks)) * 100;
}
